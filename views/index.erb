<h2>Usage</h2>

<p>GraphFinder receives an APGP (anchored pseudo graph pattern) as the input.
It will then generate a bunch of BGPs from the APGP which are considered to represent the same meaning.</p>

<p>Optionally, a SPARQL frame may be passed.
A SPARQL frame is a SPARQL query with the placeholder sequence <i>_BGP_</i>.
The placeholder will be replaced by the BGPs generated by GraphFinder to produce variations of SPARQL queries.
When omitted, the following default SPARQL frame will be used: <i>SELECT * WHERE { _BGP_ }</i>.</p>

<h2>Example</h2>
The two parameters, <i>apgp</i> and <i>frame</i>, may be posted to the server,
using a REST client, e.g. <a href="http://curl.haxx.se/">cURL</a>.

<textarea class="bash" readonly="true" style="height:5em">
curl -d apgp="..." -d frame="..." <%= url('/queries') %>
</textarea>

Alternatively, the paramaters may be encoded in JSON and the JSON structure may be posted.

<textarea class="bash" readonly="true" style="height:7em">
curl -H "Content-Type:application/json" -d '{"apgp":{...}, "frame":{...}}' <%= url('/queries') %>
</textarea>

<h2>Output</h2>
You will get an array of SPARQL queries representing the APGP and the frame.</li>

<h2>Glossary</h2>
<dl>
<dt>APGP</dt><dd>A pesudo graph pattern (PGP) with nodes anchored at actual URIs and values. It is represented as a JSON structure.</dd>
<dt>PGP</dt><dd>A graph pattern at an abstract level. It is represented as a character string.</dd>
</dl>
</dev>
